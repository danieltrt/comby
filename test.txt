
{"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "typeDefinitionProvider": {}, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}

{"jsonrpc": "2.0", "id": 1, "result": {"contents": {"kind": "markdown", "value": "[<Name full_name='pandas.core.frame.DataFrame', description='instance DataFrame'>]"}, "range": {"start": {"line": 3, "character": 0}, "end": {"line": 3, "character": 10}}}}
Set custom external
Engine.Infer
[*] Hack_parallel available. Using it.

{"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "typeDefinitionProvider": {}, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}

{"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "typeDefinitionProvider": {}, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}

{"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "typeDefinitionProvider": {}, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}

{"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "typeDefinitionProvider": {}, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}

{"jsonrpc": "2.0", "id": 1, "result": {"contents": {"kind": "markdown", "value": "[<Name full_name='pandas.core.frame.DataFrame', description='instance DataFrame'>]"}, "range": {"start": {"line": 3, "character": 0}, "end": {"line": 3, "character": 10}}}}

{"jsonrpc": "2.0", "id": 1, "result": {"contents": {"kind": "markdown", "value": "[<Name full_name='pandas.core.frame.DataFrame', description='instance DataFrame'>]"}, "range": {"start": {"line": 3, "character": 0}, "end": {"line": 3, "character": 10}}}}

{"jsonrpc": "2.0", "id": 1, "result": {"contents": {"kind": "markdown", "value": "[<Name full_name='pandas.core.frame.DataFrame', description='instance DataFrame'>]"}, "range": {"start": {"line": 3, "character": 0}, "end": {"line": 3, "character": 10}}}}

{"jsonrpc": "2.0", "id": 1, "result": {"contents": {"kind": "markdown", "value": "[<Name full_name='pandas.core.frame.DataFrame', description='instance DataFrame'>]"}, "range": {"start": {"line": 3, "character": 0}, "end": {"line": 3, "character": 10}}}}
<cl>rootUri</cl>First for shift 0
Ok first'Extracted matched: rootUri
Rule: (True)
Got back: true ""First for shift 15252
Ok first'Extracted matched: rootUri
Rule: (True)
Got back: true ""First for shift 15496
Ok first'Extracted matched: rootUri
Rule: (True)
Got back: true ""First for shift 15504
Matches: 3 | Replacements: 3
[0;31m------ [0m[0;1m/Users/drramos/Documents/CombyInferPy/src/jedi_lsp/lsp_client.py[0m
[0;32m++++++ [0m[0;1m/Users/drramos/Documents/CombyInferPy/src/jedi_lsp/lsp_client.py[0m
[0;100;30m@|[0m[0;1m-302,10 +302,10[0m ============================================================
[0;100;30m |[0m
[0;100;30m |[0m    print(json.dumps(capabilities, indent=4))
[0;100;30m |[0m
[0;41;30m-|[0m[0m[0;7;2m    [0m[0;31mrootUri[0m[0;2m = 'file:///Users/drramos/Documents/CombyInferPy/src/jedi_lsp'[0m[0m
[0;42;30m+|[0m[0m    [0;32mr[0m = 'file:///Users/drramos/Documents/CombyInferPy/src/jedi_lsp'[0m
[0;100;30m |[0m    # p.pid, None, root_uri, None, capabilities, "off`", workspace_folders
[0;100;30m |[0m    # send initialize
[0;41;30m-|[0m[0m[0;2m    json_string = send_message("initialize", processId=p.pid, rootPath=None, [0m[0;31mrootUri[0m[0;2m=[0m[0;31mrootUri[0m[0;2m,[0m[0m
[0;42;30m+|[0m[0m    json_string = send_message("initialize", processId=p.pid, rootPath=None, [0;32mr[0m=[0;32mr[0m,[0m
[0;100;30m |[0m                               initializationOptions=options, capabilities=capabilities, trace="off",
[0;100;30m |[0m                               workspaceFolders=None)
[0;100;30m |[0m

NOTE: the Python matcher was inferred from the file extension. See '-list' to set a matcher for a specific language.
